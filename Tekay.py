from tkinter import *

# Dicionário que associa cada item a uma informação correspondente
informacoes = {
"Wifi Hacking":'Comandos básicos de Wi-Fi \n'
'ip link**` show\n'
'iwconfig` #List available interfaces\n'
'airmon-ng` check kill #Kill annoying processes\n'
'airmon-ng` start wlan0 #Monitor mode\n'
'airmon-ng stop wlan0mon` #Managed mode\n'
'airodump-ng wlan0mon` #Scan (default 2.4Ghz)\n'
'airodump-ng wlan0mon --band a` #Scan 5Ghz\n'
'iwconfig wlan0 mode monitor` #Put in mode monitor\n'
'iwconfig wlan0mon mode managed` #Quit mode monitor - managed mode\n'
"iw dev wlan0 scan | grep 'BSS""|SSID\|WSP\|Authentication\|WPS\|WPA'\n#Scan available wifis\n"
"Ferramentas Recomendadas:\n 1. EAPhammer - https://github.com/s0lst1c3/eaphammer.git\n"
"2. Wifiphisher - git clone https://github.com/wifiphisher/wifiphisher.git\n"
"3. Wifite - Esta ferramenta automatiza ataques WPS/WEP/WPA-PSK.\n Ele irá automaticamente os seguintes processos:\n"
"Definir a interface no modo monitor\n"
"Procure possíveis redes - E deixe você selecionar a(s) vítima(s)\n"
"Se WEP - Lançar ataques WEP\n"
"Se WPA-PSK - Lançar ataques WPA-PSK\n"
"Resumo de Ataques WIFI\n"
"1. Desautenticação/desassociação\-- Desconecte todos (ou um ESSID/cliente específico)**\n"
"2. APs falsos aleatórios -- Ocultar redes, possíveis scanners de travamento\n"
"3. Overload AP -- Tente matar o AP (geralmente não é muito útil)\n"
"4. WIDS -- Brinque com o IDS0**\n"
"4. São recursos que examinam o tráfego na rede, para detectar e prevenir os acessos não autorizados na mesma,\nprotegendo-a da exploração das vulnerabilidades.\n"
"5.Desautenticação usando Aireplay-ng \n aireplay-ng -0 0 -a 00:14:6C:7E:40:80 -c 00:0F:B5:34:30:30 ath0\n"
"-0 significa desautenticação\n"
"0 é o número de mortes a serem enviadas (você pode enviar várias se desejar);\n -0 significa enviá-los continuamente"
"-a 00:14:6C:7E:40:80 é o endereço MAC do ponto de acesso"
"-c 00:0F:B5:34:30:30 é o endereço MAC do cliente para desautenticar;\n se isso for omitido, a desautenticação de transmissão será enviada (nem sempre funciona)"
"ath0 é o nome da interface\n.\nKomthi Pedro.",
'Remote Code Execution':'Tipos de ataques RCE\n = = = = =\n'
'Existem vários tipos de ataques RCE, Os mais comuns são:\n'
'1. - ** -- Ataque de injeção** -- \n'
'– vários aplicativos permitem que a entrada fornecida pelo usuário execute comandos. Exemplos disso são inputs de pesquisas ou outros de entradas. \nOs invasores podem fornecer dados de entrada deliberadamente malformados para executar código arbitrário.\n'
'2. - **Ataque de desserialização —**\n'        
'os aplicativos geralmente usam serialização para organizar dados para facilitar a comunicação.\nOs programas de desserialização podem interpretar dados serializados fornecidos pelo usuário como código executável.\n Um exemplo de vúlnerabilidade parecida é a de JWT TOKENS.'
'\n 3. - **Gravação fora dos limites —**\n'
'os aplicativos geralmente alocam blocos de memória fixos para armazenar dados.\nFalhas de alocação de memória permitem que invasores forneçam entradas que gravam fora do buffer\n – a memória armazena código executável, incluindo código malicioso.'
'\n= = = = =\n ## **Técnicas de Exploit de Execução Remota de Código**\n'
'Existem dois métodos principais para executar o RCE:\n = = = = = \n 1 - avaliação de código remoto e avaliação de código armazenado.\n = = = = \n'
'A avaliação do código ocorre quando as funções que avaliam o código aceitam a entrada do usuário. Por exemplo -\n  alguns aplicativos permitem que os usuários gerem nomes de variáveis usando seus nomes de usuário - os usuários controlam seus nomes de usuário,\n nisso atacantes maliciosos controlam essa funcionabilidade para impor códigos maliciosos nessas entradas que não são sanitizadas\n que permitem a avaliação de entrada para uma determinada linguagem de programação.\n'
'2 - Avaliação de Código Armazenado - ** \n = = = = =\n'
'Esse método difere da avaliação de código remoto padrão porque depende do interpretador analisando arquivos em vez de funções de linguagem específicas.\nO interpretador não deve executar arquivos com entrada do usuário.\nOs aplicativos da Web geralmente têm uma funcionalidade de upload, mas não validam suficientemente os arquivos.'
'\nPor exemplo, um aplicativo pode ter um painel de controle para cada usuário com configurações de variáveis de idioma específicas,\n que ele armazena em um arquivo de configuração. Os invasores podem modificar o parâmetro de idioma para injetar código\n no arquivo de configuração, permitindo que executem comandos arbitrários\n.\n Komthi Pedro.',
"Subdomain TakeOver":"Um controle de subdomínio ocorre quando um invasor obtém controle sobre um subdomínio de um domínio de destino.\n Normalmente, isso acontece quando o subdomínio tem um nome canônico (CNAME) no Domain Name System (DNS),\n mas nenhum host está fornecendo conteúdo para ele. Isso pode acontecer porque um host virtual ainda não foi publicado ou um host virtual foi removido.\n"
"Um invasor pode assumir esse subdomínio fornecendo seu próprio host virtual e,\n em seguida, hospedando seu próprio conteúdo para ele.\n"
"Se um invasor puder fazer isso, ele poderá ler os cookies definidos no domínio principal, executar scripts entre sites ou burlar as políticas de segurança\n de conteúdo"
"permitindo assim que eles capturem informações protegidas (incluindo logins) ou enviem conteúdo malicioso para usuários desavisados.\n"
"Um subdomínio é como uma tomada elétrica. Se você tiver seu próprio dispositivo (host) conectado a ele, está tudo bem.\n No entanto, se você remover o aparelho da tomada (ou ainda não tiver conectado),"
"alguém pode conectar um diferente.\n Você deve cortar a energia no disjuntor ou na caixa de fusíveis (DNS) para evitar que a tomada seja usada por outra pessoa.\n"
"= - = - = - =\n"
"Entendendo o que é um REGISTRO DNS CNAME.\n = - = - = - =\n"
"CNAME – Esse registro funciona de forma especial, ao invés de conectar diretamente o nome ao endereço IP\n ele realiza um redirecionamento, ou seja, você aponta para um domínio que aponta para outro,\n isso é muito útil quando necessita-se conectar mais de um registro ao mesmo domínio. \n = - = - = - = \n Seu funcionamento é da seguinte forma\n"
"Em nossa imagem do CNAME, nós deveríamos basicamente tentar adquirir o domínio chamado anotherdomain.com,\n assim ele estaria sendo apontado pelo DNS mas quem o controlaria seu conteúdo seria você.",
"Quebra de Autentificação":"\nA vulnerabilidade de Quebra de Autenticação e Gerenciamento de Sessões:\n - = - = - = -\n é um problema de segurança que ocorre quando um aplicativo da web não gerencia adequadamente as informações de autenticação e sessão do usuário.\n Isso pode levar a ataques de sessão inválida e permitir que um invasor assuma o controle de uma conta de usuário,\n acesse informações confidenciais ou execute ações maliciosas em nome do usuário.\n - = - = - = - =\n Por exemplo, um aplicativo da web pode permitir que um usuário faça login sem verificar adequadamente as credenciais do usuário,\npermitindo que um invasor assuma o controle da conta de usuário. Além disso, se o identificador de sessão não for criptografado ou gerado aleatoriamente,\num invasor pode facilmente adivinhar ou roubar o identificador de sessão e assumir o controle da sessão do usuário.\n - = -= - = -\n"
                           "Para proteger um aplicativo da web contra essa vulnerabilidade,\n é necessário adotar boas práticas de autenticação e gerenciamento de sessões, como usar senhas fortes e criptografia adequada,\n gerar identificadores de sessão aleatórios e criptografá-los, estabelecer tempos limite de sessão\n e invalidar as sessões do usuário após o logout ou após um período de inatividade.\n Além disso, as sessões devem ser monitoradas para detectar atividades suspeitas\n e os usuários devem ser alertados sobre quaisquer tentativas de acesso não autorizado\n ou atividades incomuns em suas contas.\n"
                           "Métodos para explorar essa vulnerabilidade:\n -= -= -= -= -=\n 1.Sniffing:\n Quando um usuário faz login em um aplicativo da web sem usar uma conexão segura (HTTPS),\n o atacante pode interceptar o tráfego de rede usando ferramentas de sniffer, (ETTHERCAP),\n ou o Wireshark etc, para capturar a sessão do usuário e assumir o controle da conta.\n"
                           "2. XSS (Cross-Site Scripting):\n Um atacante pode injetar um código malicioso em uma página da web que o usuário está navegando e roubar o cookie de sessão do usuário.\n"
                           "3. Session Fixation:\n O atacante pode fixar um identificador de sessão em um usuário específico, forçando o usuário a usar a sessão comprometida.\n"
                           "4. Session Hijacking:\n O atacante pode roubar o identificador de sessão de um usuário usando técnicas como adivinhação de sessão ou roubo de cookie.\n"
                           "5. Man-in-the-middle (MITM):\n O atacante pode interceptar o tráfego de rede entre o usuário e o aplicativo da web, roubando a sessão do usuário.\n"
                           "\n - - -  - - \n Pedro, komthi"
                           ""
}
def sair():
    janela.quit()

def voltar():
    janela.quit()

def mostrar_informacao():
    # obter o texto do item selecionado na listbox
    texto_selecionado = Lb1.get(ACTIVE)

    # obter a informação correspondente ao item selecionado
    informacao = informacoes.get(texto_selecionado, "Em breve / Coming soon")

    # criar nova janela para exibir as informações
    janela_informacoes = Toplevel()
    janela_informacoes.title('Informations')
    janela_informacoes.geometry('1200x800')
    janela_informacoes.configure(bg='black')

    # exibir texto na nova janela
    label_informacao = Label(janela_informacoes, text=informacao, font=('Arial', 13), bg='black', fg='white')
    label_informacao2 = Button(janela_informacoes, text='Back', command=janela_informacoes.destroy, font=('Arial', 12))
    label_informacao2.pack(pady=5)
    label_informacao.pack(pady=10)

# criar janela principal
janela = Tk()
janela.title('Basic Vuln Informations')
janela.geometry('450x300')
janela.iconbitmap('')
janela.resizable(False, False)
janela.configure(background='black')

# adicionar widgets
botao1 = Label(janela, text = 'Komthi', bg='black', fg='#DA3706', font=('Arial', 14))
botao1.place(x=5,y=5)
botao2 = Button(janela, text = 'Sair', command=sair, bg='black', fg='white', font=('Code', 12))
botao2.place(x=5, y=50)
texto = Label(janela, text="Introduction to web vulnerabilities.", font=('Arial',14), bg='#61FC32', fg='black')
texto.place(x=95,y=5)


Lb1 = Listbox(janela, selectbackground="#61FC32", selectforeground="black",font=('Sans-serif', 14), bg='#000000', fg='white', width=34, height=9)
Lb1.insert(1, "Wifi Hacking")
Lb1.insert(2, "Remote Code Execution")
Lb1.insert(3, "Subdomain TakeOver")
Lb1.insert(4, "Redirecionamento Não Confiavél")
Lb1.insert(5, "Quebra de Autentificação")
Lb1.insert(6, "Coming Soon")
Lb1.insert(7, "Coming Soon")
Lb1.insert(8, "Coming Soon")
Lb1.insert(9, "Coming Soon")

Lb1.place(x=10, y=50)

# adicionar evento de seleção de item da listbox
Lb1.bind("<<ListboxSelect>>", lambda x: mostrar_informacao())

# iniciar loop principal
janela.mainloop()

